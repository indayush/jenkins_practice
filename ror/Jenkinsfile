pipeline {

    agent any
    
    parameters{
    
        string(
                name: "s_Branch_Name", defaultValue: "demo",
                description: "Enter Brnach Name")

        string(
                name: "git_url", defaultValue: "https://github.com/indayush/ror-hello-world.git", 
                description: "Git URL of the project")

        choice(
                choices: ["DEV", "QA", "QA1", "PROD"], 
                name: "select_env",
                description: "Select Environment: ")
        
    }

    stages{
        stage("Clean Up"){
            steps{
                deleteDir()
            }
        }

        stage("Clone Repo"){
            steps{
                sh "git clone ${params.git_url}"
            }
        }

        stage("Checkout Branch"){
            steps{
                dir("ror-hello-world"){
                    sh "git checkout ${params.s_Branch_Name}"
                    sh "git branch"
                    sh '''#!/bin/bash
                        source ~/.rvm/scripts/rvm
                        source ~/.bashrc

                        rvm list
                        rails -v                   
                    '''
                }
            }
        }

        

    }


    post {
        failure {
            // Runs ONLY in case of failure, We can have simple Notification/'git blame' on build history :)
            // currentBuild.displayName = 'This build needs help!!!'
            // buildDescription("Committer: ${GERRIT_PATCHSET_UPLOADER_NAME}")

            sh("echo FAILURE FOUND")
        }
    }

}
